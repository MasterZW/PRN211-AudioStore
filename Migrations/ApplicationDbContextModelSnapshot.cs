// <auto-generated />
using System;
using AudioStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AudioStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AudioStore.Models.Entities.Avatar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Thumnail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Avatars");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Thumnail = "https://www.cariblist.com/admin/assets/avatars/"
                        });
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "LoudSpeaker"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Headphone"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Battery"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Webcam"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Mouse"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Keyboard"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Cable"
                        });
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentContent")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("CommentDate")
                        .HasMaxLength(250)
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<bool?>("CommentDelete")
                        .HasColumnType("bit")
                        .HasColumnName("Delete");

                    b.Property<bool?>("CommentEdit")
                        .HasColumnType("bit")
                        .HasColumnName("Edit");

                    b.HasKey("ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Evaluate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Stars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommentID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserId");

                    b.ToTable("Evaluates");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("BillMode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductID", "OrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProductDetail");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ProductName");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Thumnail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 2,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(703),
                            Desc = "",
                            Detail = "",
                            Name = "Fender Track",
                            Price = 175.0,
                            Stock = 50,
                            Thumnail = "https://3kshop.vn/wp-content/uploads/2022/03/3kshop-fender-track-1.jpg"
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1081),
                            Desc = "",
                            Detail = "",
                            Name = "Jabra Elite 4 Active",
                            Price = 100.0,
                            Stock = 78,
                            Thumnail = "https://3kshop.vn/wp-content/uploads/2022/01/jabra-elite-active-4-1.jpg"
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1086),
                            Desc = "",
                            Detail = "",
                            Name = "JBL Charge 5",
                            Price = 50.0,
                            Stock = 58,
                            Thumnail = "https://3kshop.vn/wp-content/uploads/2021/09/QNrL8MzWoEYkLptNdJngqQ.jpeg"
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 1,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1090),
                            Desc = "",
                            Detail = "",
                            Name = "Edifier R1280DBs",
                            Price = 110.0,
                            Stock = 26,
                            Thumnail = "https://3kshop.vn/wp-content/uploads/2021/09/unnamed-1.jpg"
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 1,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1093),
                            Desc = "",
                            Detail = "",
                            Name = "Marshall Emberton",
                            Price = 105.0,
                            Stock = 89,
                            Thumnail = "https://3kshop.vn/wp-content/uploads/2020/07/loa-marshall-Emberton-BlacknBrass.png"
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 3,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1097),
                            Desc = "",
                            Detail = "",
                            Name = "UmeTravel TRIP10C",
                            Price = 10.0,
                            Stock = 100,
                            Thumnail = "https://www.xtmobile.vn/vnt_upload/product/11_2020/thumbs/600_pin_du_phong_polymer_umetravel_trip10c_10000mah.jpg"
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 4,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 523, DateTimeKind.Local).AddTicks(1101),
                            Desc = "",
                            Detail = "",
                            Name = "Webcam Logitech C925E",
                            Price = 100.0,
                            Stock = 96,
                            Thumnail = "https://anphat.com.vn/media/product/22508_logitech_c925_1.png"
                        });
                });

            modelBuilder.Entity("AudioStore.Models.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AvatarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("AvatarID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "",
                            AvatarID = 1,
                            CreateAt = new DateTime(2022, 7, 20, 2, 30, 15, 521, DateTimeKind.Local).AddTicks(5823),
                            Email = "admin@admin.com",
                            Password = "f6fdffe48c908deb0f4c3bd36c032e72",
                            PhoneNumber = "0396384095",
                            Role = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Evaluate", b =>
                {
                    b.HasOne("AudioStore.Models.Entities.Comment", "Comment")
                        .WithMany("Evaluate")
                        .HasForeignKey("CommentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AudioStore.Models.Entities.Product", "Product")
                        .WithMany("Evaluate")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AudioStore.Models.Entities.User", "User")
                        .WithMany("Evaluates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Order", b =>
                {
                    b.HasOne("AudioStore.Models.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("AudioStore.Models.Entities.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AudioStore.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Product", b =>
                {
                    b.HasOne("AudioStore.Models.Entities.Category", "Category")
                        .WithMany("Product")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.User", b =>
                {
                    b.HasOne("AudioStore.Models.Entities.Avatar", "Avatar")
                        .WithMany("User")
                        .HasForeignKey("AvatarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Avatar", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Comment", b =>
                {
                    b.Navigation("Evaluate");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.Product", b =>
                {
                    b.Navigation("Evaluate");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("AudioStore.Models.Entities.User", b =>
                {
                    b.Navigation("Evaluates");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
